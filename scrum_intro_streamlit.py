import streamlit as st

# Dictionary holding the Scrum content
scrum_content = {
    "What is Scrum?": "Scrum is a framework for developing and sustaining complex products. This framework is lightweight, simple to understand but difficult to master. It is not a process or a technique for building products. Rather, it is a framework within which you can employ various processes and techniques to improve the development process.",
    "Scrum Roles": {
        "Product Owner": "The Product Owner is responsible for maximizing the value of the product and the work of the Development Team. The Product Owner is the sole person responsible for managing the Product Backlog. \n\nProduct Backlog management includes:  \n- Clearly expressing Product Backlog items; \n- Ordering the items in the Product Backlog to best achieve goals and missions; \n- Optimizing the value of the work the Development Team performs; \n- Ensuring that the Product Backlog is visible, transparent, and clear to all, and shows what the Scrum Team will work on next; and, \n- Ensuring the Development Team understands items in the Product Backlog to the level needed.\n\n  The Product Owner may do the above work, or have the Development Team do it. However, the Product Owner remains accountable.  The Product Owner is one person, not a committee. The Product Owner may represent the desires of a committee in the Product Backlog, but those wanting to change a Product Backlog item\u2019s priority must address the Product Owner. Only the Product Owner may cancel a sprint.  For the Product Owner to succeed, the entire organization must respect his or her decisions. The Product Owner\u2019s decisions are visible in the content and ordering of the Product Backlog. No one is allowed to tell the Development Team to work from a different set of requirements, and the Development Team isn\u2019t allowed to act on what anyone else says.",
        "Development Team": "The Development Team consists of professionals who do the work of delivering a potentially releasable Increment of \u201cDone\u201d product at the end of each Sprint. Only members of the Development Team create the Increment.  Development Teams are structured and empowered by the organization to organize and manage their own work. The resulting synergy optimizes the Development Team\u2019s overall efficiency and effectiveness. \n\n Development Teams have the following characteristics:  \n- They are self-organizing. No one (not even the Scrum Master) tells the Development Team how to turn Product Backlog into Increments of potentially releasable functionality; \n- Development Teams are cross-functional, with all the skills as a team necessary to create a product Increment; \n- Scrum recognizes no titles for Development Team members other than Developer, regardless of the work being performed by the person; there are no exceptions to this rule; \n- Scrum recognizes no sub-teams in the Development Team, regardless of particular domains that need to be addressed like testing or business analysis; there are no exceptions to this rule; and, \n- Individual Development Team members may have specialized skills and areas of focus, but accountability belongs to the Development Team as a whole.",
        "Scrum Master": "The Scrum Master is responsible for promoting and supporting Scrum as defined in the Scrum Guide. Scrum Masters do this by helping everyone understand Scrum theory, practices, rules, and values.  The Scrum Master is a servant-leader for the Scrum Team. The Scrum Master helps those outside the Scrum Team understand which of their interactions with the Scrum Team are helpful and which aren't. The Scrum Master helps everyone change these interactions to maximize the value created by the Scrum Team.  \n\nScrum Master Service to the Product Owner includes:  \n- Ensuring that goals, scope, and product domain are understood by everyone on the Scrum Team as well as possible; \n- Finding techniques for effective Product Backlog management; \n- Helping the Scrum Team understand the need for clear and concise Product Backlog items; \n- Understanding product planning in an empirical environment; \n- Ensuring the Product Owner knows how to arrange the Product Backlog to maximize value; - Understanding and practicing agility; and, - Facilitating Scrum events as requested or needed. \n\n\n Scrum Master Service to the Development Team includes:  \n- Coaching the Development Team in self-organization and cross-functionality; \n- Helping the Development Team to create high-value products; \n- Removing impediments to the Development Team's progress; \n- Facilitating Scrum events as requested or needed; and, \n- Coaching the Development Team in organizational environments in which Scrum is not yet fully adopted and understood. \n\n\n Scrum Master Service to the Organization includes:  \n- Leading and coaching the organization in its Scrum adoption; \n- Planning Scrum implementations within the organization; \n- Helping employees and stakeholders understand and enact Scrum and empirical product development; - Causing change that increases the productivity of the Scrum Team; and, \n- Working with other Scrum Masters to increase the effectiveness of the application of Scrum in the organization.",
    },
    "Scrum Events": {
        "Sprint": "The heart of Scrum is a Sprint, a time-box of one month or less during which a \u201cDone\u201d, useable, and potentially releasable product Increment is created. Sprints have consistent durations throughout a development effort. A new Sprint starts immediately after the conclusion of the previous Sprint.  Sprints contain and consist of the Sprint Planning, Daily Scrums, the development work, the Sprint Review, and the Sprint Retrospective. \n\nDuring the Sprint:  \n- No changes are made that would endanger the Sprint Goal; \n- Quality goals do not decrease; and, \n- Scope may be clarified and re-negotiated between the Product Owner and Development Team as more is learned.  \n\nEach Sprint may be considered a project with no more than a one-month horizon. Like projects, Sprints are used to accomplish something. Each Sprint has a definition of what is to be built, a design and flexible plan that will guide building it, the work, and the resultant product.  Sprints are limited to one calendar month. When a Sprint's horizon is too long the definition of what is being built may change, complexity may rise, and risk may increase. Sprints enable predictability by ensuring inspection and adaptation of progress toward a Sprint Goal at least every calendar month. Sprints also limit risk to one calendar month of cost.",
        "Sprint Planning": "The work to be performed in the Sprint is planned at the Sprint Planning. This plan is created by the collaborative work of the entire Scrum Team.  Sprint Planning is time-boxed to a maximum of eight hours for a one-month Sprint. For shorter Sprints, the event is usually shorter. The Scrum Master ensures that the event takes place and that attendants understand its purpose. The Scrum Master teaches the Scrum Team to keep it within the time-box.  \n\nSprint Planning answers the following:  \n- What can be delivered in the Increment resulting from the upcoming Sprint? \n- How will the work needed to deliver the Increment be achieved?\n  \n\nTopic One:\n What can be done this Sprint?  \nThe Development Team works to forecast the functionality that will be developed during the Sprint. The Product Owner discusses the objective that the Sprint should achieve and the Product Backlog items that, if completed in the Sprint, would achieve the Sprint Goal. The entire Scrum Team collaborates on understanding the work of the Sprint.  \n\nTopic Two:\n How will the chosen work get done?\n  Having set the Sprint Goal and selected the Product Backlog items for the Sprint, the Development Team decides how it will build this functionality into a \u201cDone\u201d product Increment during the Sprint. The Product Backlog items selected for this Sprint plus the plan for delivering them is called the Sprint Backlog.  The Development Team usually starts by designing the system and the work needed to convert the Product Backlog into a working product Increment. Work may be of varying size, or estimated effort. However, enough work is planned during Sprint Planning for the Development Team to forecast what it believes it can do in the upcoming Sprint. Work planned for the first days of the Sprint by the Development Team is decomposed by the end of this meeting, often to units of one day or less. The Development Team self-organizes to undertake the work in the Sprint Backlog, both during Sprint Planning and as needed throughout the Sprint.  \n\nThe Product Owner can help to clarify the selected Product Backlog items and make trade-offs. If the Development Team determines it has too much or too little work, it may renegotiate the selected Product Backlog items with the Product Owner. The Development Team may also invite other people to attend to provide technical or domain advice.  By the end of the Sprint Planning, the Development Team should be able to explain to the Product Owner and Scrum Master how it intends to work as a self-organizing team to accomplish the Sprint Goal and create the anticipated Increment.",
        "Daily Scrum": "The Daily Scrum is a 15-minute time-boxed event for the Development Team to synchronize activities and create a plan for the next 24 hours. This is done by inspecting the work since the last Daily Scrum and forecasting the work that could be done before the next one. The Daily Scrum is held at the same time and place each day to reduce complexity.  The Development Team uses the Daily Scrum to inspect progress toward the Sprint Goal and to inspect how progress is trending toward completing the work in the Sprint Backlog. The Daily Scrum optimizes the probability that the Development Team will meet the Sprint Goal. Every day, the Development Team should understand how it intends to work together as a self-organizing team to accomplish the Sprint Goal and create the anticipated Increment by the end of the Sprint.  \n\nThe structure of the meeting is set by the Development Team and can be conducted in different ways if it focuses on progress toward the Sprint Goal. Some Development Teams will use questions, some will be more discussion based. Here is an example of what might be used:  \n- What did I do yesterday that helped the Development Team meet the Sprint Goal? \n- What will I do today to help the Development Team meet the Sprint Goal? \n- Do I see any impediment that prevents me or the Development Team from meeting the Sprint Goal?  \n\nThe Development Team or team members often meet immediately after the Daily Scrum for detailed discussions, or to adapt, or replan, the rest of the Sprint\u2019s work.  The Scrum Master ensures that the Development Team has the meeting, but the Development Team is responsible for conducting the Daily Scrum. The Scrum Master teaches the Development Team to keep the Daily Scrum within the 15-minute time-box.  The Daily Scrum is an internal meeting for the Development Team. If others are present, the Scrum Master ensures that they do not disrupt the meeting.",
        "Sprint Review": "A Sprint Review is held at the end of the Sprint to inspect the Increment and adapt the Product Backlog if needed. During the Sprint Review, the Scrum Team and stakeholders collaborate about what was done in the Sprint. Based on that and any changes to the Product Backlog during the Sprint, attendees collaborate on the next things that could be done to optimize value. This is an informal meeting, not a status meeting, and the presentation of the Increment is intended to elicit feedback and foster collaboration.  This is at most a four-hour meeting for one-month Sprints. For shorter Sprints, the event is usually shorter. The Scrum Master ensures that the event takes place and that attendants understand its purpose. The Scrum Master teaches all to keep it within the time-box.  \n\nThe Sprint Review includes the following elements:  \n- Attendees include the Scrum Team and key stakeholders invited by the Product Owner; \n- The Product Owner explains what Product Backlog items have been \u201cDone\u201d and what has not been \u201cDone\u201d; \n- The Development Team discusses what went well during the Sprint, what problems it ran into, and how those problems were solved; \n- The Development Team demonstrates the work that it has \u201cDone\u201d and answers questions about the Increment; \n- The Product Owner discusses the Product Backlog as it stands. He or she projects likely target and delivery dates based on progress to date (if needed); \n- The entire group collaborates on what to do next, so that the Sprint Review provides valuable input to subsequent Sprint Planning; \n- Review of how the marketplace or potential use of the product might have changed what is the most valuable thing to do next; and, \n- Review of the timeline, budget, potential capabilities, and marketplace for the next anticipated releases of functionality or capability of the product.  \n\nThe result of the Sprint Review is a revised Product Backlog that defines the probable Product Backlog items for the next Sprint. The Product Backlog may also be adjusted overall to meet new opportunities.",
        "Sprint Retrospective": 'The Sprint Retrospective is an opportunity for the Scrum Team to inspect itself and create a plan for improvements to be enacted during the next Sprint.  The Sprint Retrospective occurs after the Sprint Review and prior to the next Sprint Planning. This is at most a three-hour meeting for one-month Sprints. For shorter Sprints, the event is usually shorter. The Scrum Master ensures that the event takes place and that attendants understand its purpose. The Scrum Master teaches all to keep it within the time-box.  The Scrum Master participates as a peer team member in the meeting from the accountability over the Scrum process.  \n\nThe purpose of the Sprint Retrospective is to:  \n- Inspect how the last Sprint went with regards to people, relationships, process, and tools; - Identify and order the major items that went well and potential improvements; and, \n- Create a plan for implementing improvements to the way the Scrum Team does its work.  The team members reflect on what worked well/badly in this sprint and what needs to be improved. This can be done with the help of the "Keep-Drop-Try" method, to which findings and suggestions are assigned. \n- Keep: Everything that went well and should be used further. \n- Drop: Suggestions that should be dropped because they were not helpful. \n- Try: These are the suggestions the team wants to use in the next sprint.   \n\nThe Scrum Master encourages the Scrum Team to improve, within the Scrum process framework, its development process and practices to make it more effective and enjoyable for the next Sprint. During each Sprint Retrospective, the Scrum Team plans ways to increase product quality by improving work processes or adapting the definition of \u201cDone\u201d, if appropriate and not in conflict with product or organizational standards.  By the end of the Sprint Retrospective, the Scrum Team should have identified improvements that it will implement in the next Sprint. Implementing these improvements in the next Sprint is the adaptation to the inspection of the Scrum Team itself. Although improvements may be implemented at any time, the Sprint Retrospective provides a formal opportunity to focus on inspection and adaptation.',
    },
    "Scrum Artifacts": {
        "Product Backlog": 'The Product Backlog is an ordered list of everything that is known to be needed in the product. It is the single source of requirements for any changes to be made to the product. The Product Owner is responsible for the Product Backlog, including its content, availability, and ordering.  \nIt could be specified in form of a table with the following columns:  \n- ID/Issue Number \n- Name/Title \n- Description: " As a [type of user], I want [some goal] so that [some reason]." \n- Priority (1-10) \n- Effort (1-10) \n- Value/Benefit (1-10) \n- Status (To Do, In Progress, Done) \n- Business value  \n\nThe business value is calculated with the following values:  \n1 - The implementation saves working time \n2 - My client will be happier after the implementation than before \n3 - We inspire important stakeholders \n5 - The handling of the product improves \n8 - The vision of the product is pursued \n13 - Legal requirements are implemented  \n\nAll of these that fit the requirement are summed up. The higher the number, the higher the priority.  \n\nA Product Backlog is never complete. The earliest development of it only lays out the initially known and best-understood requirements. The Product Backlog evolves as the product and the environment in which it will be used evolves. The Product Backlog is dynamic; it constantly changes to identify what the product needs to be appropriate, competitive, and useful. As long as a product exists, its Product Backlog also exists.  The Product Backlog lists all features, functions, requirements, enhancements, and fixes that constitute the changes to be made to the product in future releases. Product Backlog items have the attributes of a description, order, estimate, and value. Product Backlog items often include test descriptions that will prove its completeness when \u201cDone\u201d.  As a product is used and gains value, and the marketplace provides feedback, the Product Backlog becomes a larger and more exhaustive list. Requirements never stop changing, so a Product Backlog is a living artifact. Changes in business requirements, market conditions, or technology may cause changes in the Product Backlog.  Multiple Scrum Teams often work together on the same product. One Product Backlog is used to describe the upcoming work on the product. A Product Backlog attribute that groups items may then be employed.',
        "Sprint Backlog": "The Sprint Backlog is the set of Product Backlog items selected for the Sprint, plus a plan for delivering the product Increment and realizing the Sprint Goal. The Sprint Backlog is a forecast by the Development Team about what functionality will be in the next Increment and the work needed to deliver that functionality into a \u201cDone\u201d Increment.  The Sprint Backlog makes visible all of the work that the Development Team identifies as necessary to meet the Sprint Goal. To ensure continuous improvement, it includes at least one high priority process improvement identified in the previous Retrospective meeting.  \n\nThe Sprint Backlog is a plan with enough detail that changes in progress can be understood in the Daily Scrum. The Development Team modifies the Sprint Backlog throughout the Sprint, and the Sprint Backlog emerges during the Sprint. This emergence occurs as the Development Team works through the plan and learns more about the work needed to achieve the Sprint Goal.  \n\nAs new work is required, the Development Team adds it to the Sprint Backlog. As work is performed or completed, the estimated remaining work is updated. When elements of the plan are deemed unnecessary, they are removed. Only the Development Team can change its Sprint Backlog during a Sprint. The Sprint Backlog is a highly visible, real-time picture of the work that the Development Team plans to accomplish during the Sprint, and it belongs solely to the Development Team.",
        "Increment": "This refers to the cumulative output of all completed Product Backlog items in a given Sprint, as well as the value of all previous Sprints' increments. It should be in a usable state by the end of a Sprint, aligning with the Scrum Team's Definition of Done, irrespective of whether it is to be released by the Product Owner. As Scrum Teams mature, their Definition of Done is expected to be more demanding for higher quality. Each Increment is additive, thoroughly tested, and works with all prior Increments. Increments provide the only measure of actual progress, creating transparency around the work accomplished.",
        "Definition of Done": "This refers to the shared understanding within the Scrum Team of when a Product Backlog item or an Increment is considered completed. This shared understanding ensures transparency and guides the Development Team on how many Product Backlog items it can select during Sprint Planning. It's the basis for assessing the product Increment's completion. As teams mature, the Definition of Done evolves to include stricter criteria for higher quality. If there are multiple Scrum Teams working on the same product, they should agree on a common Definition of Done. The Product Owner can choose to release the product at the end of the Sprint Review if it meets the Definition of Done.",
        "Burndown Chart": "A burndown chart is a graphical representation of work left to do versus time. The outstanding work (or backlog) is often on the vertical axis, with time along the horizontal. That is, it is a run chart of outstanding work. It is useful for predicting when all of the work will be completed.",
    },
    "Scrum Values": "Commitment: \nPeople personally commit to achieving the goals of the Scrum Team.\n\n\nCourage: \nPeople are willing to do the right thing and work on tough problems.\n\n\nFocus: \nPeople focus on the work of the Sprint and the goals of the Scrum Team.\n\n\nOpenness: \nPeople respect each other to be capable, independent people.\n\n\nRespect: \nPeople respect each other to be capable, independent people.",
}


# Function to display a topic
def display_topic(index):
    # topic_title = topic_titles[index]
    # st.header(topic_title)
    # st.write(scrum_content[topic_title])
    topic_title = topic_titles[index]
    st.header(topic_title)
    content = scrum_content[topic_title]
    if isinstance(content, dict):
        for sub_title, sub_content in content.items():
            with st.expander(sub_title):
                st.write(sub_content)
    else:
        st.write(content)


# Get the topic title from the session state (default to the first title)
topic_titles = list(scrum_content.keys())
# if 'topic_title' not in st.session_state:
#     st.session_state['topic_title'] = topic_titles[0]


if "index" not in st.session_state:
    st.session_state["index"] = 0


# Add table of contents to the sidebar
st.sidebar.header("Table of Contents")
# st.session_state.index = st.sidebar.radio('Select a topic:', topic_titles, index=st.session_state.index)#topic_titles.index(st.session_state.topic_title))
st.session_state["index"] = st.sidebar.radio(
    "Select a topic:",
    options=list(range(len(topic_titles))),
    format_func=lambda x: topic_titles[x],
    index=st.session_state["index"],
)

# Display the current topic
display_topic(st.session_state.index)

# Create two columns for the Previous and Next buttons
col1, col2 = st.columns(2)

# Previous button
if col1.button("Previous"):
    # Decrease the index, wrap around to the end if necessary
    st.session_state.index = (st.session_state.index - 1) % len(topic_titles)
    # st.session_state.topic_title = topic_titles[index]
    # Redraw the page
    st.experimental_rerun()

# Next button
if col2.button("Next"):
    # Increase the index, wrap around to the start if necessary
    st.session_state.index = (st.session_state.index + 1) % len(topic_titles)
    # st.session_state.topic_title = topic_titles[index]
    # Redraw the page
    st.experimental_rerun()
